[33mcommit 0796c3116a94a15faca258836a7989f9ef1029b0[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m, [m[1;31morigin/master[m[33m, [m[1;31morigin/HEAD[m[33m)[m
Author: itxiongge <aqairenlan@foxmail.com>
Date:   Wed Sep 21 22:53:03 2022 +0800

    day10-netty

[1mdiff --git a/day10-netty/pom.xml b/day10-netty/pom.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..e202415[m
[1m--- /dev/null[m
[1m+++ b/day10-netty/pom.xml[m
[36m@@ -0,0 +1,48 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project xmlns="http://maven.apache.org/POM/4.0.0"[m
[32m+[m[32m         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[32m+[m[32m         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">[m
[32m+[m[32m    <modelVersion>4.0.0</modelVersion>[m
[32m+[m
[32m+[m[32m    <groupId>com.hero.netty</groupId>[m
[32m+[m[32m    <artifactId>day10-netty</artifactId>[m
[32m+[m[32m    <version>1.0-SNAPSHOT</version>[m
[32m+[m
[32m+[m[32m    <dependencies>[m
[32m+[m[32m        <dependency>[m
[32m+[m[32m            <groupId>junit</groupId>[m
[32m+[m[32m            <artifactId>junit</artifactId>[m
[32m+[m[32m            <version>4.13</version>[m
[32m+[m[32m        </dependency>[m
[32m+[m
[32m+[m[32m        <dependency>[m
[32m+[m[32m            <groupId>io.netty</groupId>[m
[32m+[m[32m            <artifactId>netty-all</artifactId>[m
[32m+[m[32m            <version>4.1.8.Final</version>[m
[32m+[m[32m        </dependency>[m
[32m+[m
[32m+[m[32m        <dependency>[m
[32m+[m[32m            <groupId>com.google.protobuf</groupId>[m
[32m+[m[32m            <artifactId>protobuf-java</artifactId>[m
[32m+[m[32m            <version>3.6.1</version>[m
[32m+[m[32m        </dependency>[m
[32m+[m[32m    </dependencies>[m
[32m+[m
[32m+[m[32m    <build>[m
[32m+[m[32m        <pluginManagement>[m
[32m+[m[32m            <plugins>[m
[32m+[m[32m                <plugin>[m
[32m+[m[32m                    <groupId>org.apache.maven.plugins</groupId>[m
[32m+[m[32m                    <artifactId>maven-compiler-plugin</artifactId>[m
[32m+[m[32m                    <version>3.2</version>[m
[32m+[m[32m                    <configuration>[m
[32m+[m[32m                        <source>1.8</source>[m
[32m+[m[32m                        <target>1.8</target>[m
[32m+[m[32m                        <encoding>UTF-8</encoding>[m
[32m+[m[32m                        <showWarnings>true</showWarnings>[m
[32m+[m[32m                    </configuration>[m
[32m+[m[32m                </plugin>[m
[32m+[m[32m            </plugins>[m
[32m+[m[32m        </pluginManagement>[m
[32m+[m[32m    </build>[m
[32m+[m[32m</project>[m
[1mdiff --git a/day10-netty/src/main/java/com/hero/bio/TCPClient.java b/day10-netty/src/main/java/com/hero/bio/TCPClient.java[m
[1mnew file mode 100644[m
[1mindex 0000000..b20c3e7[m
[1m--- /dev/null[m
[1m+++ b/day10-netty/src/main/java/com/hero/bio/TCPClient.java[m
[36m@@ -0,0 +1,29 @@[m
[32m+[m[32mpackage com.hero.bio;[m
[32m+[m
[32m+[m[32mimport java.io.InputStream;[m
[32m+[m[32mimport java.io.OutputStream;[m
[32m+[m[32mimport java.net.Socket;[m
[32m+[m[32mimport java.util.Scanner;[m
[32m+[m
[32m+[m[32m//BIO 客户端程序[m
[32m+[m[32mpublic class TCPClient {[m
[32m+[m[32m    public static void main(String[] args) throws Exception {[m
[32m+[m[32m        while (true) {[m
[32m+[m[32m            //1.创建Socket对象[m
[32m+[m[32m            Socket s = new Socket("127.0.0.1", 9999);[m
[32m+[m[32m            //2.从连接中取出输出流并发消息[m
[32m+[m[32m            OutputStream os = s.getOutputStream();[m
[32m+[m[32m            System.out.println("请输入:");[m
[32m+[m[32m            Scanner sc = new Scanner(System.in);[m
[32m+[m[32m            String msg = sc.nextLine();[m
[32m+[m[32m            os.write(msg.getBytes());[m
[32m+[m[32m            //3.从连接中取出输入流并接收回话[m
[32m+[m[32m            InputStream is = s.getInputStream(); //阻塞[m
[32m+[m[32m            byte[] b = new byte[20];[m
[32m+[m[32m            is.read(b);[m
[32m+[m[32m            System.out.println("老板说:" + new String(b).trim());[m
[32m+[m[32m            //4.关闭[m
[32m+[m[32m            s.close();[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/day10-netty/src/main/java/com/hero/bio/TCPServer.java b/day10-netty/src/main/java/com/hero/bio/TCPServer.java[m
[1mnew file mode 100644[m
[1mindex 0000000..90d51fa[m
[1m--- /dev/null[m
[1m+++ b/day10-netty/src/main/java/com/hero/bio/TCPServer.java[m
[36m@@ -0,0 +1,32 @@[m
[32m+[m[32mpackage com.hero.bio;[m
[32m+[m
[32m+[m[32mimport java.io.InputStream;[m
[32m+[m[32mimport java.io.OutputStream;[m
[32m+[m[32mimport java.net.ServerSocket;[m
[32m+[m[32mimport java.net.Socket;[m
[32m+[m
[32m+[m[32m//BIO 服务器端程序[m
[32m+[m[32mpublic class TCPServer {[m
[32m+[m[32m    public static void main(String[] args) throws Exception {[m
[32m+[m[32m        //1.创建ServerSocket对象[m
[32m+[m[32m        System.out.println("服务端 启动....");[m
[32m+[m[32m        System.out.println("初始化端口 9999 ");[m
[32m+[m[32m        ServerSocket ss = new ServerSocket(9999); //端口号[m
[32m+[m
[32m+[m[32m        while (true) {[m
[32m+[m[32m            //2.监听客户端[m
[32m+[m[32m            Socket s = ss.accept(); //阻塞[m
[32m+[m[32m            //3.从连接中取出输入流来接收消息[m
[32m+[m[32m            InputStream is = s.getInputStream(); //阻塞[m
[32m+[m[32m            byte[] b = new byte[10];[m
[32m+[m[32m            is.read(b);[m
[32m+[m[32m            String clientIP = s.getInetAddress().getHostAddress();[m
[32m+[m[32m            System.out.println(clientIP + "说:" + new String(b).trim());[m
[32m+[m[32m            //4.从连接中取出输出流并回话[m
[32m+[m[32m            OutputStream os = s.getOutputStream();[m
[32m+[m[32m            os.write("没钱".getBytes());[m
[32m+[m[32m            //5.关闭[m
[32m+[m[32m            s.close();[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/day10-netty/src/main/java/com/hero/netty/demo01/NettyClient.java b/day10-netty/src/main/java/com/hero/netty/demo01/NettyClient.java[m
[1mnew file mode 100644[m
[1mindex 0000000..0f8d33b[m
[1m--- /dev/null[m
[1m+++ b/day10-netty/src/main/java/com/hero/netty/demo01/NettyClient.java[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32mpackage com.hero.netty.demo01;[m
[32m+[m
[32m+[m[32mimport io.netty.bootstrap.Bootstrap;[m
[32m+[m[32mimport io.netty.channel.ChannelFuture;[m
[32m+[m[32mimport io.netty.channel.ChannelInitializer;[m
[32m+[m[32mimport io.netty.channel.EventLoopGroup;[m
[32m+[m[32mimport io.netty.channel.nio.NioEventLoopGroup;[m
[32m+[m[32mimport io.netty.channel.socket.SocketChannel;[m
[32m+[m[32mimport io.netty.channel.socket.nio.NioSocketChannel;[m
[32m+[m
[32m+[m[32mpublic class NettyClient {[m
[32m+[m[32m    public static void main(String[] args) throws  Exception{[m
[32m+[m
[32m+[m[32m        //1. 创建一个线程组[m
[32m+[m[32m        EventLoopGroup group=new NioEventLoopGroup();[m
[32m+[m[32m        //2. 创建客户端的启动助手，完成相关配置[m
[32m+[m[32m        Bootstrap b=new Bootstrap();[m
[32m+[m[32m        b.group(group)  //3. 设置线程组[m
[32m+[m[32m         .channel(NioSocketChannel.class)  //4. 设置客户端通道的实现类[m
[32m+[m[32m         .handler(new ChannelInitializer<SocketChannel>() {  //5. 创建一个通道初始化对象[m
[32m+[m[32m             @Override[m
[32m+[m[32m             protected void initChannel(SocketChannel socketChannel) throws Exception {[m
[32m+[m[32m                 socketChannel.pipeline().addLast(new NettyClientHandler()); //6.往Pipeline链中添加自定义的handler[m
[32m+[m[32m             }[m
[32m+[m[32m         });[m
[32m+[m[32m        System.out.println("......客户端 准备就绪 msg发射......");[m
[32m+[m
[32m+[m[32m        //7.启动客户端去连接服务器端  connect方法是异步的   sync方法是同步阻塞的[m
[32m+[m[32m        ChannelFuture cf=b.connect("127.0.0.1",9999).sync();[m
[32m+[m
[32m+[m[32m        //8.关闭连接(异步非阻塞)[m
[32m+[m[32m        cf.channel().closeFuture().sync();[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/day10-netty/src/main/java/com/hero/netty/demo01/NettyClientHandler.java b/day10-netty/src/main/java/com/hero/netty/demo01/NettyClientHandler.java[m
[1mnew file mode 100644[m
[1mindex 0000000..9a206b5[m
[1m--- /dev/null[m
[1m+++ b/day10-netty/src/main/java/com/hero/netty/demo01/NettyClientHandler.java[m
[36m@@ -0,0 +1,24 @@[m
[32m+[m[32mpackage com.hero.netty.demo01;[m
[32m+[m
[32m+[m[32mimport io.netty.buffer.ByteBuf;[m
[32m+[m[32mimport io.netty.buffer.Unpooled;[m
[32m+[m[32mimport io.netty.channel.ChannelHandlerContext;[m
[32m+[m[32mimport io.netty.channel.ChannelInboundHandlerAdapter;[m
[32m+[m[32mimport io.netty.util.CharsetUtil;[m
[32m+[m
[32m+[m[32m//客户端业务处理类[m
[32m+[m[32mpublic class NettyClientHandler extends ChannelInboundHandlerAdapter {[m
[32m+[m
[32m+[m[32m    //通道就绪事件[m
[32m+[m[32m    public void channelActive(ChannelHandlerContext ctx){[m
[32m+[m[32m        //System.out.println("Client:"+ctx);[m
[32m+[m[32m        ctx.writeAndFlush(Unpooled.copiedBuffer("天王盖地虎",CharsetUtil.UTF_8));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    //读取数据事件[m
[32m+[m[32m    public void channelRead(ChannelHandlerContext ctx,Object msg){[m
[32m+[m[32m        ByteBuf buf=(ByteBuf) msg;[m
[32m+[m[32m        System.out.println("server msg："+buf.toString(CharsetUtil.UTF_8));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/day10-netty/src/main/java/com/hero/netty/demo01/NettyServer.java b/day10-netty/src/main/java/com/hero/netty/demo01/NettyServer.java[m
[1mnew file mode 100644[m
[1mindex 0000000..927f683[m
[1m--- /dev/null[m
[1m+++ b/day10-netty/src/main/java/com/hero/netty/demo01/NettyServer.java[m
[36m@@ -0,0 +1,37 @@[m
[32m+[m[32mpackage com.hero.netty.demo01;[m
[32m+[m[32mimport io.netty.bootstrap.ServerBootstrap;[m
[32m+[m[32mimport io.netty.channel.ChannelFuture;[m
[32m+[m[32mimport io.netty.channel.ChannelInitializer;[m
[32m+[m[32mimport io.netty.channel.ChannelOption;[m
[32m+[m[32mimport io.netty.channel.EventLoopGroup;[m
[32m+[m[32mimport io.netty.channel.nio.NioEventLoopGroup;[m
[32m+[m[32mimport io.netty.channel.socket.SocketChannel;[m
[32m+[m[32mimport io.netty.channel.socket.nio.NioServerSocketChannel;[m
[32m+[m
[32m+[m[32mpublic class NettyServer {[m
[32m+[m[32m    public static void main(String[] args) throws Exception{[m
[32m+[m[32m        //1. 创建一个线程组：接收客户端连接[m
[32m+[m[32m        EventLoopGroup bossGroup =new NioEventLoopGroup();[m
[32m+[m[32m        //2. 创建一个线程组：处理网络操作[m
[32m+[m[32m        EventLoopGroup workerGroup =new NioEventLoopGroup();[m
[32m+[m[32m        //3. 创建服务器端启动助手来配置参数[m
[32m+[m[32m        ServerBootstrap b=new ServerBootstrap();[m
[32m+[m[32m        b.group(bossGroup,workerGroup) //4.设置两个线程组[m
[32m+[m[32m         .channel(NioServerSocketChannel.class) //5.使用NioServerSocketChannel作为服务器端通道的实现[m
[32m+[m[32m         .option(ChannelOption.SO_BACKLOG,128) //6.设置线程队列中等待连接的个数[m
[32m+[m[32m         .childOption(ChannelOption.SO_KEEPALIVE,true) //7.保持活动连接状态[m
[32m+[m[32m         .childHandler(new ChannelInitializer<SocketChannel>() {  //8. 创建一个通道初始化对象[m
[32m+[m[32m             public void initChannel(SocketChannel sc){   //9. 往Pipeline链中添加自定义的handler类[m
[32m+[m[32m                 sc.pipeline().addLast(new NettyServerHandler());[m
[32m+[m[32m             }[m
[32m+[m[32m         });[m
[32m+[m[32m        System.out.println("......服务端 启动中 init port:9999 ......");[m
[32m+[m[32m        ChannelFuture cf=b.bind(9999).sync();  //10. 绑定端口 bind方法是异步的  sync方法是同步阻塞的[m
[32m+[m[32m        System.out.println("......服务端 启动成功 ......");[m
[32m+[m
[32m+[m[32m        //11. 关闭通道，关闭线程组[m
[32m+[m[32m        cf.channel().closeFuture().sync(); //异步[m
[32m+[m[32m        bossGroup.shutdownGracefully();[m
[32m+[m[32m        workerGroup.shutdownGracefully();[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/day10-netty/src/main/java/com/hero/netty/demo01/NettyServerHandler.java b/day10-netty/src/main/java/com/hero/netty/demo01/NettyServerHandler.java[m
[1mnew file mode 100644[m
[1mindex 0000000..e59b469[m
[1m--- /dev/null[m
[1m+++ b/day10-netty/src/main/java/com/hero/netty/demo01/NettyServerHandler.java[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32mpackage com.hero.netty.demo01;[m
[32m+[m
[32m+[m[32mimport io.netty.buffer.ByteBuf;[m
[32m+[m[32mimport io.netty.buffer.Unpooled;[m
[32m+[m[32mimport io.netty.channel.ChannelHandlerContext;[m
[32m+[m[32mimport io.netty.channel.ChannelInboundHandlerAdapter;[m
[32m+[m[32mimport io.netty.util.CharsetUtil;[m
[32m+[m
[32m+[m[32m//服务器端的业务处理类[m
[32m+[m[32mpublic class NettyServerHandler extends ChannelInboundHandlerAdapter {[m
[32m+[m
[32m+[m[32m    //读取数据事件，msg就客戶端发过来的数据。[m
[32m+[m[32m    public void channelRead(ChannelHandlerContext ctx,Object msg){[m
[32m+[m[32m        //System.out.println("Server:"+ctx);[m
[32m+[m[32m        //用缓冲区接受数据[m
[32m+[m[32m        ByteBuf buf=(ByteBuf) msg;[m
[32m+[m[32m        //转成字符串[m
[32m+[m[32m        System.out.println("client msg："+buf.toString(CharsetUtil.UTF_8));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    //数据读取完毕事件，读取完客户端数据后回复客户端[m
[32m+[m[32m    public void channelReadComplete(ChannelHandlerContext ctx){[m
[32m+[m[32m        //Unpooled.copiedBuffer获取到缓冲区[m
[32m+[m[32m        //第一个参数是向客户端传的字符串[m
[32m+[m[32m        ctx.writeAndFlush(Unpooled.copiedBuffer("宝塔镇河妖",CharsetUtil.UTF_8));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    //异常发生事件[m
[32m+[m[32m    public void exceptionCaught(ChannelHandlerContext ctx,Throwable t){[m
[32m+[m[32m        //异常时关闭ctx，ctx是相关信息的汇总，关闭它其它的也就关闭了。[m
[32m+[m[32m        ctx.close();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/day10-netty/src/main/java/com/hero/netty/demo02chat/NettyChatClient.java b/day10-netty/src/main/java/com/hero/netty/demo02chat/NettyChatClient.java[m
[1mnew file mode 100644[m
[1mindex 0000000..9228d50[m
[1m--- /dev/null[m
[1m+++ b/day10-netty/src/main/java/com/hero/netty/demo02chat/NettyChatClient.java[m
[36m@@ -0,0 +1,61 @@[m
[32m+[m[32mpackage com.hero.netty.demo02chat;[m
[32m+[m
[32m+[m[32mimport io.netty.bootstrap.Bootstrap;[m
[32m+[m[32mimport io.netty.channel.*;[m
[32m+[m[32mimport io.netty.channel.nio.NioEventLoopGroup;[m
[32m+[m[32mimport io.netty.channel.socket.SocketChannel;[m
[32m+[m[32mimport io.netty.channel.socket.nio.NioSocketChannel;[m
[32m+[m[32mimport io.netty.handler.codec.string.StringDecoder;[m
[32m+[m[32mimport io.netty.handler.codec.string.StringEncoder;[m
[32m+[m
[32m+[m[32mimport java.util.Scanner;[m
[32m+[m
[32m+[m[32m//聊天程序客户端[m
[32m+[m[32mpublic class NettyChatClient {[m
[32m+[m[32m    private final String host; //服务器端IP地址[m
[32m+[m[32m    private final int port;  //服务器端端口号[m
[32m+[m
[32m+[m[32m    public NettyChatClient(String host, int port) {[m
[32m+[m[32m        this.host = host;[m
[32m+[m[32m        this.port = port;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void run(){[m
[32m+[m[32m        EventLoopGroup group = new NioEventLoopGroup();[m
[32m+[m[32m        try {[m
[32m+[m[32m            Bootstrap bootstrap = new Bootstrap()[m
[32m+[m[32m                    .group(group)[m
[32m+[m[32m                    .channel(NioSocketChannel.class)[m
[32m+[m[32m                    .handler(new ChannelInitializer<SocketChannel>() {[m
[32m+[m[32m                        @Override[m
[32m+[m[32m                        public void initChannel(SocketChannel ch){[m
[32m+[m[32m                            ChannelPipeline pipeline=ch.pipeline();[m
[32m+[m[32m                            //往pipeline链中添加一个解码器[m
[32m+[m[32m                            pipeline.addLast("decoder",new StringDecoder());[m
[32m+[m[32m                            //往pipeline链中添加一个编码器[m
[32m+[m[32m                            pipeline.addLast("encoder",new StringEncoder());[m
[32m+[m[32m                            //往pipeline链中添加自定义的handler(业务处理类)[m
[32m+[m[32m                            pipeline.addLast(new NettyChatClientHandler());[m
[32m+[m[32m                        }[m
[32m+[m[32m                    });[m
[32m+[m
[32m+[m[32m            ChannelFuture cf=bootstrap.connect(host,port).sync();[m
[32m+[m[32m            Channel channel=cf.channel();[m
[32m+[m[32m            System.out.println("------"+channel.localAddress().toString().substring(1)+"------");[m
[32m+[m[32m            Scanner scanner=new Scanner(System.in);[m
[32m+[m[32m            while (scanner.hasNextLine()){[m
[32m+[m[32m                String msg=scanner.nextLine();[m
[32m+[m[32m                channel.writeAndFlush(msg+"\r\n");[m
[32m+[m[32m            }[m
[32m+[m[32m            cf.channel().closeFuture().sync();[m
[32m+[m[32m        } catch (Exception e) {[m
[32m+[m[32m            e.printStackTrace();[m
[32m+[m[32m        } finally {[m
[32m+[m[32m            group.shutdownGracefully();[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public static void main(String[] args) throws Exception {[m
[32m+[m[32m        new NettyChatClient("121.199.163.228",9999).run();[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/day10-netty/src/main/java/com/hero/netty/demo02chat/NettyChatClientHandler.java b/day10-netty/src/main/java/com/hero/netty/demo02chat/NettyChatClientHandler.java[m
[1mnew file mode 100644[m
[1mindex 0000000..f1a8387[m
[1m--- /dev/null[m
[1m+++ b/day10-netty/src/main/java/com/hero/netty/demo02chat/NettyChatClientHandler.java[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32mpackage com.hero.netty.demo02chat;[m
[32m+[m
[32m+[m[32mimport io.netty.channel.ChannelHandlerContext;[m
[32m+[m[32mimport io.netty.channel.SimpleChannelInboundHandler;[m
[32m+[m
[32m+[m[32m//自定义一个客户端业务处理类[m
[32m+[m[32mpublic class NettyChatClientHandler extends SimpleChannelInboundHandler<String> {[m
[32m+[m[32m    @Override[m
[32m+[m[32m    protected void channelRead0(ChannelHandlerContext ctx, String s) throws Exception {[m
[32m+[m[32m        System.out.println(s.trim());[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/day10-netty/src/main/java/com/hero/netty/demo02chat/NettyChatServer.java b/day10-netty/src/main/java/com/hero/netty/demo02chat/NettyChatServer.java[m
[1mnew file mode 100644[m
[1mindex 0000000..7c07c97[m
[1m--- /dev/null[m
[1m+++ b/day10-netty/src/main/java/com/hero/netty/demo02chat/NettyChatServer.java[m
[36m@@ -0,0 +1,54 @@[m
[32m+[m[32mpackage com.hero.netty.demo02chat;[m
[32m+[m
[32m+[m[32mimport io.netty.bootstrap.Serv