spring.shardingsphere.datasource.names: ds0,ds1

# 配置数据源ds0
spring.shardingsphere.datasource.ds0.type: com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds0.driverClassName: com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds0.jdbc-url: jdbc:mysql://123.57.135.5:3306/ds0?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8
spring.shardingsphere.datasource.ds0.username: root
spring.shardingsphere.datasource.ds0.password: hero@202207

# 配置数据源ds1
spring.shardingsphere.datasource.ds1.type: com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds1.driverClassName: com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds1.jdbc-url: jdbc:mysql://47.95.211.46:3306/ds1?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8
spring.shardingsphere.datasource.ds1.username: root
spring.shardingsphere.datasource.ds1.password: hero@202207

# 配置分库策略
spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column: user_id
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression: ds$->{user_id % 2}

# 配置分表策略
spring.shardingsphere.sharding.tables.t_order.actual-data-nodes: ds$->{0..1}.t_order$->{0..1}
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column: order_id
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.algorithm-expression: t_order$->{order_id % 2}
